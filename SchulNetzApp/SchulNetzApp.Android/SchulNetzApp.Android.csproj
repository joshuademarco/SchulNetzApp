<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{129B7DF5-96A3-4234-811C-94E4F6FFE24B}</ProjectGuid>
    <ProjectTypeGuids>{EFBA0AD7-5A72-4C68-AF49-83D382785DCF};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <TemplateGuid>{c9e5eea5-ca05-42a1-839b-61506e0a37df}</TemplateGuid>
    <OutputType>Library</OutputType>
    <RootNamespace>SchulNetzApp.Droid</RootNamespace>
    <AssemblyName>SchulNetzApp.Android</AssemblyName>
    <AndroidApplication>True</AndroidApplication>
    <AndroidResgenFile>Resources\Resource.designer.cs</AndroidResgenFile>
    <AndroidResgenClass>Resource</AndroidResgenClass>
    <AndroidManifest>Properties\AndroidManifest.xml</AndroidManifest>
    <MonoAndroidResourcePrefix>Resources</MonoAndroidResourcePrefix>
    <MonoAndroidAssetsPrefix>Assets</MonoAndroidAssetsPrefix>
    <AndroidUseLatestPlatformSdk>false</AndroidUseLatestPlatformSdk>
    <TargetFrameworkVersion>v9.0</TargetFrameworkVersion>
    <AndroidEnableSGenConcurrent>true</AndroidEnableSGenConcurrent>
    <AndroidHttpClientHandlerType>Xamarin.Android.Net.AndroidClientHandler</AndroidHttpClientHandlerType>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>portable</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug</OutputPath>
    <DefineConstants>DEBUG;</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <AndroidLinkMode>None</AndroidLinkMode>
    <AotAssemblies>false</AotAssemblies>
    <EnableLLVM>false</EnableLLVM>
    <AndroidEnableProfiledAot>false</AndroidEnableProfiledAot>
    <BundleAssemblies>false</BundleAssemblies>
    <MandroidI18n />
    <AndroidSupportedAbis />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release</OutputPath>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <AndroidManagedSymbols>true</AndroidManagedSymbols>
    <AndroidUseSharedRuntime>false</AndroidUseSharedRuntime>
    <AotAssemblies>false</AotAssemblies>
    <EnableLLVM>false</EnableLLVM>
    <AndroidEnableProfiledAot>false</AndroidEnableProfiledAot>
    <BundleAssemblies>false</BundleAssemblies>
    <AndroidCreatePackagePerAbi>false</AndroidCreatePackagePerAbi>
    <AndroidSupportedAbis>armeabi-v7a;x86;arm64-v8a</AndroidSupportedAbis>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Mono.Android" />
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Numerics" />
    <Reference Include="System.Numerics.Vectors" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.FxCopAnalyzers">
      <Version>2.9.8</Version>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Xamarin.Firebase.Auth">
      <Version>71.1605.0</Version>
    </PackageReference>
    <PackageReference Include="Xamarin.Firebase.Messaging">
      <Version>71.1740.0</Version>
    </PackageReference>
    <PackageReference Include="Xamarin.Forms" Version="4.3.0.908675" />
    <PackageReference Include="Xamarin.Android.Support.Design" Version="28.0.0.3" />
    <PackageReference Include="Xamarin.Android.Support.v7.AppCompat" Version="28.0.0.3" />
    <PackageReference Include="Xamarin.Android.Support.v4" Version="28.0.0.3" />
    <PackageReference Include="Xamarin.Android.Support.v7.CardView" Version="28.0.0.3" />
    <PackageReference Include="Xamarin.Android.Support.v7.MediaRouter" Version="28.0.0.3" />
    <PackageReference Include="Xamarin.Android.Support.Core.Utils" Version="28.0.0.3" />
    <PackageReference Include="Xamarin.Android.Support.CustomTabs" Version="28.0.0.3" />
    <PackageReference Include="Xamarin.Essentials" Version="1.3.1" />
    <PackageReference Include="Xamarin.GooglePlayServices.Base">
      <Version>71.1610.0</Version>
    </PackageReference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Code\AndroidFirebaseAuthenticator.cs" />
    <Compile Include="Code\MyEntryRenderer.cs" />
    <Compile Include="MainActivity.cs" />
    <AndroidResource Include="Resources\layout\activity_main.axml" />
    <Compile Include="Resources\Resource.designer.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <AndroidAsset Include="Assets\6518-correct-check-animation.json" />
    <AndroidAsset Include="Assets\6973-incorrect-failed.json" />
    <None Include="Resources\AboutResources.txt" />
    <None Include="Assets\AboutAssets.txt" />
    <None Include="Properties\AndroidManifest.xml" />
  </ItemGroup>
  <ItemGroup>
    <AndroidResource Include="Resources\layout\Tabbar.axml" />
    <AndroidResource Include="Resources\layout\Toolbar.axml" />
    <AndroidResource Include="Resources\values\styles.xml" />
    <AndroidResource Include="Resources\values\colors.xml" />
    <AndroidResource Include="Resources\mipmap-anydpi-v26\icon.xml" />
    <AndroidResource Include="Resources\mipmap-anydpi-v26\icon_round.xml" />
    <AndroidResource Include="Resources\mipmap-hdpi\icon.png" />
    <AndroidResource Include="Resources\mipmap-hdpi\launcher_foreground.png" />
    <AndroidResource Include="Resources\mipmap-mdpi\icon.png" />
    <AndroidResource Include="Resources\mipmap-mdpi\launcher_foreground.png" />
    <AndroidResource Include="Resources\mipmap-xhdpi\icon.png" />
    <AndroidResource Include="Resources\mipmap-xhdpi\launcher_foreground.png" />
    <AndroidResource Include="Resources\mipmap-xxhdpi\icon.png" />
    <AndroidResource Include="Resources\mipmap-xxhdpi\launcher_foreground.png" />
    <AndroidResource Include="Resources\mipmap-xxxhdpi\icon.png" />
    <AndroidResource Include="Resources\mipmap-xxxhdpi\launcher_foreground.png" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Resources\drawable-hdpi\" />
    <Folder Include="Resources\drawable-xhdpi\" />
    <Folder Include="Resources\drawable-xxhdpi\" />
    <Folder Include="Resources\drawable-xxxhdpi\" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\SchulNetzApp\SchulNetzApp.csproj">
      <Project>{F3B40A91-C503-4E4B-B976-949496190A7C}</Project>
      <Name>SchulNetzApp</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <AndroidResource Include="Resources\drawable\logo.png" />
  </ItemGroup>
  <Import Project="$(MSBuildExtensionsPath)\Xamarin\Android\Xamarin.Android.CSharp.targets" />
  <ItemGroup>
    <GoogleServicesJson Include="google-services.json" />
  </ItemGroup>
  <Target Name="FirebasePerfTask" BeforeTargets="_CreateBaseApk">
    <_RewriteManifest Path="$(IntermediateOutputPath)android\AndroidManifest.xml" />
  </Target>
  <UsingTask TaskName="_RewriteManifest" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <Path ParameterType="System.String" Required="True" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.Text.RegularExpressions" />
      <Code Type="Fragment" Language="cs"><![CDATA[
        //
        // This is a workaround for bug https://github.com/xamarin/GooglePlayServicesComponents/issues/216
        // where multiple <service ComponentDiscoveryService> are being overwritten in the AndroidManifest.xml 
        // by the last XML definition instead of being merged into a single definition.
        //
        // The solution is to capture all services named ComponentDiscoveryService from the AndroidManifest.xml
        // before it is used to create the Android APK. If there are many ComponentDiscoveryService, replace
        // all definitions with an empty string except the last one which will be used as the merged service.
        // Simply put the content of all services into this one to get a final merged service.
        // 
        // By doing so, all components are properly registered and we no longer have NullReferenceExceptions.
        // This will need to be fixed in Xamarin.Android.
        //

				var manifest = File.ReadAllText(Path);
				var matches = Regex.Matches(manifest, "(<service android:name=\"com\\.google\\.firebase\\.components\\.ComponentDiscoveryService\").*?(<\\/service>)", RegexOptions.Singleline);

        // There are multiple ComponentDiscoveryService definitions, we will need to merge them.
        if (matches.Count > 1)
        {
          var newManifest = manifest;

          var serviceContent = new List<string>();
          for (var i = 0; i < matches.Count; i++)
          {
            var m = matches[i];

            // Capture the content of the service to merge it later with all the other ones.
            var innerMatches = Regex.Matches(m.Value, "<service[\\s\\S]*?>([\\s\\S]*?)<\\/service>");
            if (innerMatches.Count > 0)
            {
              var firstMatch = innerMatches[0];
              if (firstMatch.Groups.Count > 1)
              {
                var capture = innerMatches[0].Groups[1].Value;
                serviceContent.Add(capture);
              }
            }

            // This is not the last occurrence, remove it from the AndroidManifest.
            if (i < matches.Count - 1)
            {
              newManifest = newManifest.Replace(m.Value, "");
            }
            // This is the last occurrence, use it to merge all the service definitions.
            else
            {
              var lastContent = serviceContent[serviceContent.Count - 1];
              var updatedContent = string.Join("\n", serviceContent);
              newManifest = newManifest.Replace(lastContent, updatedContent);
            }  
          }

          // Replace the AndroidManifest.
          File.WriteAllText(Path, newManifest);
        }
	]]></Code>
    </Task>
  </UsingTask>
</Project>